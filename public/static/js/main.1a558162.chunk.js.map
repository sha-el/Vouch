{"version":3,"sources":["app/config.ts","app/gql/user.ts","app/service/user.ts","app/helpers/queryParams.ts","app/components/Login/Login.tsx","app/components/Login/SignUp.tsx","app/components/Login/index.tsx","app/gql/application.ts","app/helpers/CopyToClipboard.tsx","app/helpers/Date.tsx","app/components/Permission/Dropdown.tsx","app/components/Application/CreateApplication.tsx","app/service/application.ts","app/components/Application/ApplicationList.tsx","app/components/Application/index.tsx","app/gql/group.ts","app/components/Group/CreateGroup.tsx","app/service/group.ts","app/components/Group/FetchGroupData.tsx","app/components/Group/Table.tsx","app/components/Group/GroupList.tsx","app/components/Group/index.tsx","app/gql/organization.ts","app/components/User/UserDropDown.tsx","app/components/Organization/CreateOrganization.tsx","app/service/organization.ts","app/components/Organization/OrganizationList.tsx","app/components/Organization/index.tsx","app/components/User/UpdatePersonalDetails.tsx","app/components/User/UpdatePassword.tsx","app/components/User/UserAvatar.tsx","app/components/User/MyAcoount.tsx","app/components/User/UserList.tsx","app/components/User/index.tsx","app/components/Dashboard/Dashboard.tsx","app/App.tsx","reportWebVitals.ts","index.tsx"],"names":["errorLink","onError","graphQLErrors","networkError","forEach","v","console","error","some","extensions","code","localStorage","clear","location","href","notify","type","title","message","_client","ApolloClient","link","from","createHttpLink","uri","process","AUTH_HOST","headers","Token","sessionStorage","getItem","cache","InMemoryCache","LOGIN_URL","LOGOUT_URL","client","gql","AdduserMutation","SignUpMutation","UserDetailQuery","MeQuery","AddGroupsToUserMutation","UpdateUserPermissionsMutation","UpdatePasswordMutation","UserDropDownQuery","AddUserToApp","RemoveAppFromUser","UserListQuery","login","email","password","a","fetch","method","body","JSON","stringify","application","URLSearchParams","search","get","logout","removeItem","query","errorPolicy","resp","Promise","resolve","reject","data","setItem","me","currentOrganization","errors","APP_NAME","window","loginService","response","ok","Login","props","onTabChange","useForm","defaultValues","saveSession","handleSubmit","control","React","isLoading","updateLoading","subtitle","onSubmit","then","navigate","catch","gutter","rules","required","name","render","onChange","value","onBlur","label","placeholder","before","target","checked","displayBlock","loading","color","style","width","flat","onClick","Signup","setError","user","password2","mutate","mutation","variables","callBack","duration","map","e","join","tabs","key","LoginSignup","activeTab","changeTab","alignItems","justifyContent","background","height","boxShadow","flex","image","titles","activeKey","unMountOnChange","ApplicationListQuery","CreateApplicationMutation","CopyToClipboard","content","margin","children","overlay","text","textArea","document","createElement","top","left","position","appendChild","focus","select","execCommand","err","removeChild","copyToClipBoard","secondary","icon","shape","trigger","timeSince","date","seconds","Math","floor","Date","getTime","interval","VouchPermissions","TimeSince","toLocaleString","PermissionDropDown","mode","Object","keys","concat","toUpperCase","filter","toLowerCase","includes","uniqueIdentifier","listDisplayProp","displayValue","saveApplication","CreateApplication","permissions","features","useState","elevation","id","onCancel","variant","withOrganization","redirectUrl","offset","span","ApplicationList","pageNumber","updatePageNumber","pageSize","updatePageSize","addOpen","updateAddOpen","updateApplication","updateSearch","useQuery","refetch","to","extra","primary","applicationEdge","edges","pagination","totalCount","count","currentPage","batchSize","itemsPerPage","pn","ns","justify","Column","header","preserveOnClose","defaultValue","borderless","onKeyDown","alignSelf","size","updatedAt","isVisible","container","undefined","Application","path","GroupListQuery","CreateGroupMutation","saveGroup","group","CreateGroup","FetchGroupData","first","GroupTable","groupEdge","onGroupSelect","createdBy","GroupList","updateGroup","params","Group","OrganizationListQuery","AddOrganizationMutation","fetchUsers","userEdge","UserDropdown","clearable","searchValue","saveOrganization","organization","CreateOrganization","users","contact","gstCode","gstRate","hsnCode","amtPerPointSale","amtReady","address","OrganizationList","updateOrganization","organizationEdge","Organization","UpdatePersonalDetails","setState","state","isError","this","firstName","middleName","lastName","disabled","UpdatePassword","confirmPassword","userId","UserAvatar","Theme","theme","shadow","display","textAlign","getColor","slice","updateGroups","groups","addGroupsToUser","updatePermission","addPermissionsToUser","addAppToUser","app","addApplicationToUser","removeAppFromUser","removeApplicationFromUser","MyAccount","personalDetailsForm","togglePersonalDetailsForm","updatePassword","toggleUpdatePassword","paddingTop","borderRadius","marginTop","values","t","currentApplications","updatedApplications","newApp","find","removedApp","handleAppChange","groupData","groupsEdge","onClose","UserList","component","col","lastLogin","defaultOrganization","User","Home","Dashboard","updateUser","useEffect","bottom","logo","placement","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a558162.chunk.js","sourcesContent":["import { ApolloClient, InMemoryCache, createHttpLink, from } from '@apollo/client';\nimport { onError } from '@apollo/client/link/error';\nimport { notify } from 'sha-el-design/lib';\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach((v) => console.error(v));\n\n    if (graphQLErrors.some((v) => v.extensions?.code === 401)) {\n      localStorage.clear();\n      location.href = '/';\n    }\n  }\n\n  if (networkError) {\n    notify({\n      type: 'error',\n      title: 'Unable to reach our servers',\n      message: 'Please check your internet connection',\n    });\n  }\n});\n\nexport const _client = () =>\n  new ApolloClient({\n    link: from([\n      errorLink,\n      createHttpLink({\n        uri: process.env.AUTH_HOST || '/api/graphql',\n        headers: { Token: sessionStorage.getItem('token') || localStorage.getItem('token') || '' },\n      }),\n    ]),\n    cache: new InMemoryCache(),\n  });\n\nexport const LOGIN_URL = '/api/login';\nexport const LOGOUT_URL = '/api/logout';\nexport const client = _client();\n","import { gql } from 'apollo-boost';\n\nexport const LoginMutation = gql`\n  mutation Login($email: String!, $password: String!, $application: String!) {\n    login(email: $email, password: $password, application: $application)\n  }\n`;\n\nexport const AdduserMutation = gql`\n  mutation AdduserMutation($user: UserMutationInput!) {\n    addUser(user: $user) {\n      id\n      email\n    }\n  }\n`;\n\nexport const SignUpMutation = gql`\n  mutation SignUp($user: UserMutationInput!, $password: String!) {\n    signUp(user: $user, password: $password) {\n      id\n    }\n  }\n`;\n\nexport const UserDetailQuery = gql`\n  query UserDetails($id: ObjectId!) {\n    user(id: $id) {\n      id\n      email\n      firstName\n      middleName\n      lastName\n      lastLogin\n      permissions\n      groups\n      image\n      applications\n      groupsEdge {\n        edges {\n          id\n          name\n          permissions\n          updatedAt\n        }\n      }\n      applicationEdge {\n        edges {\n          id\n          name\n        }\n      }\n      permissions\n    }\n  }\n`;\n\nexport const MeQuery = gql`\n  query Me {\n    me {\n      id\n      email\n      firstName\n      middleName\n      lastName\n      lastLogin\n      permissions\n      groupsEdge {\n        edges {\n          id\n          name\n          permissions\n          updatedAt\n        }\n      }\n      organizationEdge {\n        edges {\n          id\n          name\n          address\n          contact\n          gstCode\n          gstRate\n          hsnCode\n          amtPerPointSale\n          amtReady\n          features\n          updatedAt\n        }\n      }\n    }\n\n    currentOrganization {\n      id\n      name\n      address\n      contact\n      gstCode\n      gstRate\n      hsnCode\n      amtPerPointSale\n      amtReady\n      features\n      updatedAt\n    }\n  }\n`;\n\nexport const AddGroupsToUserMutation = gql`\n  mutation AddGroupsToUserMutation($userId: String!, $groups: [String]!) {\n    addGroupToUser(userId: $userId, group: $groups) {\n      id\n    }\n  }\n`;\n\nexport const UpdateUserPermissionsMutation = gql`\n  mutation UpdateUserPermissionsMutation($userId: String!, $permissions: [String!]!) {\n    addPermissionToUser(userId: $userId, permission: $permissions) {\n      id\n    }\n  }\n`;\n\nexport const UpdatePasswordMutation = gql`\n  mutation UpdatePasswordMutation($userId: String!, $password: String!) {\n    updatePassword(userId: $userId, password: $password) {\n      id\n    }\n  }\n`;\n\nexport const UserDropDownQuery = gql`\n  query UserDropDownQuery($email: String!) {\n    userEdge(emailIContains: $email, first: 5) {\n      edges {\n        id\n        firstName\n        lastName\n        email\n      }\n    }\n  }\n`;\n\nexport const AddUserToApp = gql`\n  mutation AddUserToApp($userId: String!, $app: String!) {\n    addApplicationToUser(userId: $userId, applicationId: $app) {\n      id\n    }\n  }\n`;\n\nexport const RemoveAppFromUser = gql`\n  mutation RemoveUserFromApp($userId: String!, $app: String!) {\n    removeApplicationFromUser(userId: $userId, applicationId: $app) {\n      id\n    }\n  }\n`;\n\nexport const UserListQuery = gql`\n  query UserListQuery($first: Int, $offset: Int, $email: String) {\n    userEdge(first: $first, offset: $offset, emailIContains: $email) {\n      count\n      edges {\n        id\n        email\n        firstName\n        middleName\n        lastName\n        applications\n        lastLogin\n        permissions\n        groups\n        image\n        defaultOrganization {\n          id\n          name\n        }\n        updatedAt\n      }\n    }\n  }\n`;\n","import { client, LOGIN_URL, LOGOUT_URL, _client } from '../config';\nimport {\n  AddGroupsToUserMutation,\n  UpdateUserPermissionsMutation,\n  UpdatePasswordMutation,\n  MeQuery,\n  SignUpMutation,\n  AdduserMutation,\n  AddUserToApp,\n  RemoveAppFromUser,\n} from '../gql/user';\nimport { UserMutationInput, UserNode } from '../typings/user';\nimport { MutationRoot, QueryRoot } from '../typings/schema';\n\nexport async function login(email: string, password: string) {\n  return fetch(LOGIN_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      email,\n      password,\n      application: new URLSearchParams(location.search).get('appId') || process.env.REACT_APP_APP_ID,\n    }),\n  });\n}\n\nexport async function logout() {\n  localStorage.removeItem('token');\n  sessionStorage.removeItem('token');\n  localStorage.removeItem('user');\n  await fetch(LOGOUT_URL, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n  return (location.href = '/');\n}\n\nexport async function me() {\n  const resp = await _client().query<Pick<QueryRoot, 'me' | 'currentOrganization'>>({\n    query: MeQuery,\n    errorPolicy: 'all',\n  });\n\n  return new Promise<Pick<QueryRoot, 'me' | 'currentOrganization'>>((resolve, reject) => {\n    if (resp.data) {\n      localStorage.setItem('user', JSON.stringify(resp.data.me));\n      localStorage.setItem('currentOrganization', JSON.stringify(resp.data.currentOrganization));\n      resolve(resp.data);\n    }\n\n    if (resp.errors) {\n      reject(resp.errors);\n    }\n  });\n}\n\nexport function signUp(user: UserMutationInput, password: string) {\n  return client.mutate<Pick<MutationRoot, 'signUp'>>({\n    mutation: SignUpMutation,\n    variables: { user, password },\n    errorPolicy: 'all',\n  });\n}\n\nexport function addUser(user: UserMutationInput) {\n  return client.mutate<Pick<MutationRoot, 'addUser'>>({\n    mutation: AdduserMutation,\n    variables: { user },\n    errorPolicy: 'all',\n  });\n}\n\nexport function addGroupsToUser(userId: string, groups: string[]) {\n  return client.mutate<Pick<MutationRoot, 'addGroupToUser'>>({\n    mutation: AddGroupsToUserMutation,\n    variables: { userId, groups },\n    errorPolicy: 'all',\n  });\n}\n\nexport function addPermissionsToUser(userId: string, permissions: string[]) {\n  return client.mutate<Pick<MutationRoot, 'addPermissionToUser'>>({\n    mutation: UpdateUserPermissionsMutation,\n    variables: { userId, permissions },\n    errorPolicy: 'all',\n  });\n}\n\nexport function updatePassword(userId: string, password: string) {\n  return client.mutate<Pick<MutationRoot, 'addPermissionToUser'>>({\n    mutation: UpdatePasswordMutation,\n    variables: { userId, password },\n    errorPolicy: 'all',\n  });\n}\n\nexport function addApplicationToUser(userId: string, app: string) {\n  return client.mutate<Pick<MutationRoot, 'addApplicationToUser'>>({\n    mutation: AddUserToApp,\n    variables: { userId, app },\n    errorPolicy: 'all',\n  });\n}\n\nexport function removeApplicationFromUser(userId: string, app: string) {\n  return client.mutate({\n    mutation: RemoveAppFromUser,\n    variables: { userId, app },\n    errorPolicy: 'all',\n  });\n}\n\nexport function checkAccess(user: UserNode, permission: string[]) {\n  if (!user) {\n    return false;\n  }\n\n  const checkPermission = (permissions: string[]) => permissions.map((per) => permission.includes(per)).some((v) => v);\n\n  return (\n    user.groupsEdge?.edges.reduce((pv: boolean, cv) => pv || checkPermission(cv.permissions), false) ||\n    checkPermission(user.permissions)\n  );\n}\n","const urlParams = new URLSearchParams(window.location.search);\nexport const APP_NAME = urlParams.get('appName') || 'Vouch';\n","import * as React from 'react';\nimport { CardHeader, Col, Row, CardBody, Input, Button, Divider, CheckBox, ButtonGroup, notify } from 'sha-el-design';\nimport { RiUser3Line, RiLockPasswordLine } from 'react-icons/ri';\nimport { login as loginService } from '../../service/user';\nimport { LoginMutationInput } from '../../typings/user';\nimport { useForm, Controller } from 'react-hook-form';\nimport { APP_NAME } from '../../helpers/queryParams';\nimport { RouteComponentProps } from '@reach/router';\n\nexport interface LoginProps extends RouteComponentProps {\n  onTabChange: () => void;\n}\n\nconst login = async (data: LoginMutationInput) => {\n  try {\n    const response = await loginService(data.email, data.password);\n    if (!response.ok) {\n      notify({\n        title: 'Something went wrong',\n        type: 'error',\n      });\n      return response;\n    }\n    notify({\n      title: 'Login Success',\n      type: 'success',\n    });\n    return response;\n  } catch (e) {\n    throw e;\n  }\n};\n\nexport const Login: React.FunctionComponent<LoginProps> = (props) => {\n  const { onTabChange } = props;\n\n  const { handleSubmit, errors, control } = useForm<LoginMutationInput>({\n    defaultValues: {\n      email: '',\n      password: '',\n      saveSession: false,\n    },\n  });\n  const [isLoading, updateLoading] = React.useState(false);\n\n  const onSubmit = (data: LoginMutationInput) => {\n    updateLoading(true);\n    login(data)\n      .then(() => {\n        props.navigate?.('/dashboard');\n        updateLoading(false);\n      })\n      .catch(() => updateLoading(false));\n  };\n\n  return (\n    <>\n      <CardHeader subtitle={`Login to ${APP_NAME}`}>Welcome back</CardHeader>\n      <CardBody>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Row gutter={[0, '10px 0']}>\n            <Col>\n              <Controller\n                rules={{ required: 'Email is required' }}\n                control={control}\n                name=\"email\"\n                render={({ onChange, value, onBlur }) => (\n                  <Input\n                    type=\"text\"\n                    label=\"Email\"\n                    placeholder=\"Enter your email address\"\n                    before={<RiUser3Line />}\n                    value={value}\n                    onChange={({ target: { value } }) => onChange(value)}\n                    error={errors.email?.message}\n                    onBlur={onBlur}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                rules={{ required: 'Password is required' }}\n                control={control}\n                name=\"password\"\n                render={({ onChange, value, onBlur }) => (\n                  <Input\n                    type=\"password\"\n                    label=\"Password\"\n                    placeholder=\"Enter your Password\"\n                    before={<RiLockPasswordLine />}\n                    value={value}\n                    onChange={({ target: { value } }) => onChange(value)}\n                    error={errors.password?.message}\n                    onBlur={onBlur}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                control={control}\n                name=\"saveSession\"\n                render={({ onChange, value, onBlur }) => (\n                  <CheckBox\n                    label=\"Keep me signed in\"\n                    checked={value}\n                    onChange={({ target: { checked } }) => onChange(checked)}\n                    onBlur={onBlur}\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Button displayBlock type=\"primary\" loading={isLoading}>\n              Submit\n            </Button>\n          </Row>\n        </form>\n        <Divider color=\"#6870a0\" />\n        <ButtonGroup>\n          <Button style={{ width: '50%' }} flat type=\"secondary\">\n            Forget Password\n          </Button>\n          <Button style={{ width: '50%' }} flat type=\"primary\" onClick={onTabChange}>\n            Sign up\n          </Button>\n        </ButtonGroup>\n      </CardBody>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { CardHeader, CardBody, Row, Col, Input, Button, Divider, notify } from 'sha-el-design';\nimport { RiLockPasswordLine, RiUser3Line } from 'react-icons/ri';\nimport { SignUpMutation } from '../../typings/user';\nimport { signUp } from '../../service/user';\nimport { useForm, Controller } from 'react-hook-form';\nimport { APP_NAME } from '../../helpers/queryParams';\n\nexport type SignUpProps = {\n  onTabChange: () => void;\n};\n\nexport const Signup: React.FC<SignUpProps> = (props) => {\n  const { onTabChange } = props;\n  const { handleSubmit, errors, control, setError } = useForm<SignUpMutation>();\n\n  const onSubmit = (data: SignUpMutation) => {\n    if (data.password !== data.password2) {\n      setError('password2', { message: 'Error mismatch' });\n      return;\n    }\n\n    signUp(\n      {\n        email: data.email,\n      },\n      data.password,\n    )\n      .then((v) => {\n        if (v.data) {\n          notify({\n            title: 'Sign up Success',\n            message: `Your new account for ${APP_NAME} is ready. Please Login`,\n            type: 'success',\n            callBack: () => v.data,\n            duration: 6000,\n          });\n          return;\n        }\n\n        notify({\n          title: v.errors?.map((e) => e.message).join(','),\n          type: 'error',\n          message: 'Please contact system admin for further details',\n          duration: 10000,\n        });\n      })\n      .catch(() =>\n        notify({\n          title: 'Error',\n          type: 'error',\n          message: 'Something went wrong',\n          duration: 10000,\n        }),\n      );\n  };\n\n  return (\n    <>\n      <CardHeader\n        subtitle={\n          <>\n            <span>Enter your personal details</span>\n            <br />\n            <span>and start journey with {APP_NAME}</span>\n          </>\n        }\n      >\n        Hello Traveler\n      </CardHeader>\n      <CardBody>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <Row gutter={[0, '10px 0']}>\n            <Col>\n              <Controller\n                rules={{ required: 'Email is required' }}\n                control={control}\n                name=\"email\"\n                render={({ onChange, value }) => (\n                  <Input\n                    type=\"text\"\n                    label=\"Email\"\n                    placeholder=\"Enter your email address\"\n                    before={<RiUser3Line />}\n                    value={value}\n                    onChange={({ target: { value } }) => onChange(value)}\n                    error={errors.email}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                rules={{ required: 'Password is required' }}\n                control={control}\n                name=\"password\"\n                render={({ onChange, value, onBlur }) => (\n                  <Input\n                    type=\"password\"\n                    label=\"Password\"\n                    placeholder=\"Enter your Password\"\n                    before={<RiLockPasswordLine />}\n                    value={value}\n                    onChange={({ target: { value } }) => onChange(value)}\n                    error={errors.password}\n                    onBlur={onBlur}\n                  />\n                )}\n              />\n            </Col>\n            <Col>\n              <Controller\n                rules={{ required: 'Please confirm Password' }}\n                control={control}\n                name=\"password2\"\n                render={({ onChange, value, onBlur }) => (\n                  <Input\n                    type=\"password\"\n                    label=\"Password\"\n                    placeholder=\"Confirm Password\"\n                    before={<RiLockPasswordLine />}\n                    value={value}\n                    onChange={({ target: { value } }) => onChange(value)}\n                    error={errors.password}\n                    onBlur={onBlur}\n                  />\n                )}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Button displayBlock type=\"primary\">\n              Submit\n            </Button>\n          </Row>\n          <Divider color=\"#6870a0\" />\n          <Button displayBlock flat type=\"secondary\" onClick={onTabChange}>\n            Already has a account? Login\n          </Button>\n        </form>\n      </CardBody>\n    </>\n  );\n};\n","import * as React from 'react';\nimport { RouteComponentProps } from '@reach/router';\nimport { Card, Col, Row, CardMedia, TabPanelContainer, TabPanel } from 'sha-el-design';\n\nimport { Login } from './Login';\nimport { Signup } from './SignUp';\n\nconst tabs = [\n  {\n    title: 'Login',\n    key: 'login',\n  },\n  {\n    title: 'Signup',\n    key: 'signup',\n  },\n];\n\nexport const LoginSignup: React.FC<RouteComponentProps> = (props) => {\n  const [activeTab, changeTab] = React.useState('login');\n\n  if (localStorage.user) {\n    location.href = '/dashboard';\n  }\n\n  return (\n    <Row\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      style={{\n        background: '#e7d9fb14',\n        height: '100vh',\n        boxShadow:\n          '0px 8px 9px -5px rgba(0,0,0,0.2), 0px 15px 22px 2px rgba(0,0,0,0.14), 0px 6px 28px 5px rgba(0,0,0,0.12)',\n      }}\n    >\n      <Col flex=\"0 1 400px\">\n        <Card>\n          <CardMedia\n            image=\"https://image.freepik.com/free-vector/clouds-background-with-stars-text-soace_1017-25499.jpg\"\n            height=\"300px\"\n          />\n          <TabPanelContainer titles={tabs} activeKey={activeTab} unMountOnChange={false}>\n            <TabPanel title=\"Login\" key=\"login\">\n              <Login onTabChange={() => changeTab('signup')} {...props} />\n            </TabPanel>\n            <TabPanel title=\"Sign Up\" key=\"signup\">\n              <Signup onTabChange={() => changeTab('login')} />\n            </TabPanel>\n          </TabPanelContainer>\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n","import { gql } from 'apollo-boost';\n\nexport const ApplicationListQuery = gql`\n  query ApplicationListQuery($first: Int, $offset: Int, $name: String) {\n    applicationEdge(first: $first, offset: $offset, nameIContains: $name) {\n      count\n      edges {\n        id\n        name\n        withOrganization\n        features\n        permissions\n        redirectUrl\n        updatedAt\n      }\n    }\n  }\n`;\n\nexport const CreateApplicationMutation = gql`\n  mutation CreateApplicationMutation($application: ApplicationMutationInput!) {\n    addApplication(application: $application) {\n      id\n      name\n      withOrganization\n      features\n      permissions\n      redirectUrl\n    }\n  }\n`;\n","import React from 'react';\nimport { MdContentCopy } from 'react-icons/md';\nimport { Button, Popover, Tooltip, Text, notify } from 'sha-el-design/lib';\n\nexport const CopyToClipboard: React.FC<{ children?: string }> = (props) => {\n  return (\n    <Popover\n      content={\n        <>\n          <Text margin=\"2px\">{props.children}</Text>\n          <Tooltip overlay=\"Copy to Clipboard\">\n            <Button\n              onClick={() => copyToClipBoard(props.children || '')}\n              secondary\n              flat\n              icon={<MdContentCopy />}\n              shape=\"circle\"\n            />\n          </Tooltip>\n        </>\n      }\n      position=\"top\"\n      trigger=\"onHover\"\n    >\n      <span>{props.children}</span>\n    </Popover>\n  );\n};\n\nfunction copyToClipBoard(text: string) {\n  const textArea = document.createElement('textarea');\n  textArea.value = text;\n\n  // Avoid scrolling to bottom\n  textArea.style.top = '0';\n  textArea.style.left = '0';\n  textArea.style.position = 'fixed';\n\n  document.body.appendChild(textArea);\n  textArea.focus();\n  textArea.select();\n\n  try {\n    if (document.execCommand('copy')) {\n      notify({\n        type: 'info',\n        title: 'Copied to clipboard',\n      });\n    } else {\n      notify({\n        type: 'warning',\n        title: 'Failed to Copy',\n      });\n    }\n  } catch (err) {\n    notify({\n      type: 'warning',\n      title: 'Failed to Copy',\n    });\n  }\n\n  document.body.removeChild(textArea);\n}\n","import React from 'react';\nimport { Tooltip } from 'sha-el-design/lib';\n\nexport function timeSince(date: Date) {\n  const seconds = Math.floor((new Date().getTime() - date.getTime()) / 1000);\n\n  let interval = seconds / 31536000;\n\n  if (interval > 1) {\n    return Math.floor(interval) + ' years';\n  }\n  interval = seconds / 2592000;\n  if (interval > 1) {\n    return Math.floor(interval) + ' months';\n  }\n  interval = seconds / 86400;\n  if (interval > 1) {\n    return Math.floor(interval) + ' days';\n  }\n  interval = seconds / 3600;\n  if (interval > 1) {\n    return Math.floor(interval) + ' hours';\n  }\n  interval = seconds / 60;\n  if (interval > 1) {\n    return Math.floor(interval) + ' minutes';\n  }\n  return Math.floor(seconds) + ' seconds';\n}\n\nexport const TimeSince: React.FC<{ children: Date }> = (props) => {\n  return (\n    <Tooltip overlay={props.children.toLocaleString()}>\n      <span>{timeSince(props.children)} ago</span>\n    </Tooltip>\n  );\n};\n","import * as React from 'react';\nimport { AutoComplete } from 'sha-el-design';\n\nexport type PermissionDropDownProps = {\n  value: string[];\n  onChange: (value: string[]) => void;\n  error?: string;\n};\n\nexport enum VouchPermissions {\n  SUPER_USER = 'SUPER_USER',\n  CAN_ADD_GROUP = 'CAN_ADD_GROUP',\n  CAN_EDIT_GROUP = 'CAN_EDIT_GROUP',\n  CAN_DELETE_GROUP = 'CAN_DELETE_GROUP',\n  CAN_ADD_USER = 'CAN_ADD_USER',\n}\n\nexport const PermissionDropDown: React.FC<PermissionDropDownProps> = (props) => {\n  return (\n    <AutoComplete<string>\n      mode=\"multiple\"\n      value={props.value || []}\n      data={(e) =>\n        Object.keys(VouchPermissions)\n          .concat([e.toUpperCase()])\n          .filter((v) => v.toLowerCase().includes(e.toLowerCase()))\n      }\n      uniqueIdentifier={(e) => e}\n      listDisplayProp={(e) => e}\n      label=\"Select Permissions\"\n      onChange={(e: string[]) => props.onChange(e)}\n      displayValue={(e) => e}\n      error={props.error}\n    />\n  );\n};\n","import React from 'react';\nimport { Row, Col, Input, Button, Card, CardHeader, notify, AutoComplete, CheckBox, Text } from 'sha-el-design';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PermissionDropDown } from '../Permission/Dropdown';\nimport { ApplicationMutationInput } from '../../typings/application';\nimport { createApplication } from '../../service/application';\n\nexport type CreateApplicationsProps = {\n  onCancel: () => void;\n  application?: ApplicationMutationInput;\n};\n\nconst saveApplication = (data: ApplicationMutationInput) =>\n  createApplication(data)\n    .then(() => {\n      notify({\n        type: 'success',\n        title: 'Application Added',\n      });\n    })\n    .catch(() =>\n      notify({\n        type: 'error',\n        title: 'Something went wrong',\n      }),\n    );\n\nexport const CreateApplication: React.FC<CreateApplicationsProps> = (props) => {\n  const { handleSubmit, errors, control } = useForm<ApplicationMutationInput>({\n    defaultValues: props.application || {\n      name: '',\n      permissions: [],\n      features: [],\n    },\n  });\n  const [isLoading, updateLoading] = React.useState(false);\n\n  const onSubmit = (data: ApplicationMutationInput) => {\n    updateLoading(true);\n    data.id = props.application?.id;\n    saveApplication(data)\n      .then(() => {\n        updateLoading(false);\n        props.onCancel();\n      })\n      .catch(() => updateLoading(false));\n  };\n\n  return (\n    <Card elevation={0}>\n      <CardHeader>Add Application</CardHeader>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Row gutter={[0, '10px 0']}>\n          <Col>\n            <Controller\n              rules={{ required: 'Name is required' }}\n              control={control}\n              name=\"name\"\n              render={({ onChange, value, onBlur }) => (\n                <Input\n                  required\n                  label=\"Name\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.name}\n                  onBlur={onBlur}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"withOrganization\"\n              render={({ onChange, value }) => (\n                <CheckBox checked={value} onChange={(e) => onChange(e.target.checked)} label=\"With Organization\" />\n              )}\n            />\n            <Text variant=\"p\" color=\"error\">\n              {errors.withOrganization?.message}\n            </Text>\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"permissions\"\n              render={({ onChange, value }) => (\n                <PermissionDropDown\n                  value={value || []}\n                  onChange={(e) => onChange(e)}\n                  error={errors.permissions?.join(',')}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"features\"\n              render={({ value, onChange }) => (\n                <AutoComplete\n                  mode=\"multiple\"\n                  value={value || []}\n                  onChange={onChange}\n                  error={errors.features?.map((v) => v?.message).join(',')}\n                  listDisplayProp={(e) => e}\n                  uniqueIdentifier={(e) => e}\n                  displayValue={(e) => e}\n                  label=\"Select Features\"\n                  data={(e) => [e.toUpperCase()]}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"redirectUrl\"\n              render={({ onChange, value }) => (\n                <Input label=\"Redirect Url\" value={value} onChange={onChange} error={errors.redirectUrl?.message} />\n              )}\n            />\n          </Col>\n          <Col offset={15} span={4}>\n            <Button displayBlock type=\"danger\" onClick={props.onCancel}>\n              Cancel\n            </Button>\n          </Col>\n          <Col span={1} />\n          <Col span={4}>\n            <Button displayBlock type=\"primary\" loading={isLoading}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    </Card>\n  );\n};\n","import { client } from '../config';\nimport { ApplicationListQuery, CreateApplicationMutation } from '../gql/application';\nimport { MutationRoot, QueryRoot } from '../typings/schema';\nimport { ApplicationMutationInput } from '../typings/application';\n\nexport function createApplication(application: ApplicationMutationInput) {\n  return client.mutate<Pick<MutationRoot, 'addApplication'>>({\n    mutation: CreateApplicationMutation,\n    variables: { application },\n  });\n}\n\nexport function applicationListQuery() {\n  return client.query<Pick<QueryRoot, 'applicationEdge'>>({\n    query: ApplicationListQuery,\n  });\n}\n","import { useQuery } from '@apollo/client';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport React from 'react';\nimport { MdCheck, MdClose, MdFilter, MdHome } from 'react-icons/md';\nimport {\n  Breadcrumb,\n  Page,\n  FlexTable,\n  Popover,\n  Pagination,\n  Text,\n  Row,\n  Col,\n  Input,\n  Button,\n  Drawer,\n} from 'sha-el-design/lib';\nimport { client } from '../../config';\nimport { ApplicationListQuery } from '../../gql/application';\nimport { CopyToClipboard } from '../../helpers/CopyToClipboard';\nimport { TimeSince } from '../../helpers/Date';\nimport { ApplicationNode } from '../../typings/application';\nimport { QueryRoot } from '../../typings/schema';\nimport { CreateApplication } from './CreateApplication';\n\nexport const ApplicationList: React.FC<RouteComponentProps> = () => {\n  const [pageNumber, updatePageNumber] = React.useState(1);\n  const [pageSize, updatePageSize] = React.useState(10);\n  const [addOpen, updateAddOpen] = React.useState(false);\n  const [application, updateApplication] = React.useState<ApplicationNode | null>(null);\n\n  const [search, updateSearch] = React.useState('');\n  const { loading, error, data, refetch } = useQuery<Pick<QueryRoot, 'applicationEdge'>>(ApplicationListQuery, {\n    variables: { pageSize, offset: (pageNumber - 1) * pageSize, name: search },\n    client: client,\n  });\n\n  if (error) {\n    return <div>Something went wrong</div>;\n  }\n\n  return (\n    <Page\n      title={\n        <Breadcrumb>\n          <Link to=\"/\">\n            <MdHome />\n          </Link>\n          <Link to=\"#\">Application List</Link>\n        </Breadcrumb>\n      }\n      extra={\n        <Button primary onClick={() => updateAddOpen(true)}>\n          Add Application\n        </Button>\n      }\n    >\n      <FlexTable\n        data={data?.applicationEdge.edges || []}\n        loading={loading}\n        pagination={\n          <Pagination\n            totalCount={data?.applicationEdge.count || 0}\n            currentPage={pageNumber}\n            batchSize={pageSize}\n            itemsPerPage={[10, 20, 30]}\n            onChange={(pn, ns) => {\n              updatePageNumber(pn);\n              updatePageSize(ns);\n            }}\n            justify=\"flex-end\"\n          />\n        }\n      >\n        <FlexTable.Column\n          key=\"name\"\n          span={4}\n          header={\n            <>\n              <Text>Name</Text>\n              <Popover\n                preserveOnClose\n                content={\n                  <Row justifyContent=\"flex-end\">\n                    <Col>\n                      <Input\n                        defaultValue={search}\n                        borderless\n                        placeholder=\"Press enter to search\"\n                        onKeyDown={(e) => e.key === 'Enter' && updateSearch((e.target as HTMLInputElement).value)}\n                      />\n                    </Col>\n                    <Col flex=\"0 1 auto\" alignSelf=\"flex-end\">\n                      <Button primary flat onClick={() => updateSearch('')}>\n                        Clear\n                      </Button>\n                    </Col>\n                  </Row>\n                }\n              >\n                <Button size=\"small\" icon={<MdFilter />} secondary={!!search} flat />\n              </Popover>\n            </>\n          }\n        >\n          {(data?: ApplicationNode) => (\n            <Button\n              link\n              flat\n              primary\n              onClick={() => {\n                data && updateApplication(data);\n                updateAddOpen(true);\n              }}\n            >\n              {data?.name}\n            </Button>\n          )}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Id\" key=\"id\" span={4}>\n          {(data?: ApplicationNode) => <CopyToClipboard>{data?.id}</CopyToClipboard>}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Redirect Url\" key=\"redirectUrl\" span={8}>\n          {(data?: ApplicationNode) => data?.redirectUrl}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"With Organization\" key=\"withOrganization\" span={4}>\n          {(data?: ApplicationNode) => (data?.withOrganization ? <MdCheck /> : <MdClose />)}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Last update\" key=\"last update\" span={4}>\n          {(data?: ApplicationNode) => data && <TimeSince>{new Date(data?.updatedAt)}</TimeSince>}\n        </FlexTable.Column>\n      </FlexTable>\n      <Drawer isVisible={addOpen} style={{ container: { width: '500px' } }}>\n        <CreateApplication\n          application={application || undefined}\n          onCancel={() => {\n            refetch();\n            updateApplication(null);\n            updateAddOpen(false);\n          }}\n        />\n      </Drawer>\n    </Page>\n  );\n};\n","import { RouteComponentProps, Router } from '@reach/router';\nimport React from 'react';\nimport { ApplicationList } from './ApplicationList';\n\nexport const Application: React.FC<RouteComponentProps> = () => {\n  return (\n    <Router>\n      <ApplicationList path=\"/\" />\n    </Router>\n  );\n};\n","import { gql } from 'apollo-boost';\n\nexport const GroupListQuery = gql`\n  query GroupListQuery($first: Int!, $offset: Int!, $name: String) {\n    groupEdge(first: $first, offset: $offset, nameIContains: $name) {\n      count\n      edges {\n        id\n        name\n        updatedAt\n        permissions\n        features\n        createdBy {\n          email\n          firstName\n        }\n      }\n    }\n  }\n`;\n\nexport const CreateGroupMutation = gql`\n  mutation AddGroup($group: GroupMutationInput!) {\n    addGroup(group: $group) {\n      id\n    }\n  }\n`;\n","import React from 'react';\nimport { Row, Col, Input, Button, Card, CardHeader, notify, AutoComplete } from 'sha-el-design';\nimport { useForm, Controller } from 'react-hook-form';\nimport { PermissionDropDown } from '../Permission/Dropdown';\nimport { GroupMutationInput } from '../../typings/group';\nimport { createGroup } from '../../service/group';\n\nexport type CreateGroupsProps = {\n  onCancel: () => void;\n  group?: GroupMutationInput;\n};\n\nconst saveGroup = (data: GroupMutationInput) =>\n  createGroup(data)\n    .then(() => {\n      notify({\n        type: 'success',\n        title: 'Group Added',\n      });\n    })\n    .catch(() =>\n      notify({\n        type: 'error',\n        title: 'Something went wrong',\n      }),\n    );\n\nexport const CreateGroup: React.FC<CreateGroupsProps> = (props) => {\n  const { handleSubmit, errors, control } = useForm<GroupMutationInput>({\n    defaultValues: props.group || {\n      name: '',\n      permissions: [],\n      features: [],\n    },\n  });\n  const [isLoading, updateLoading] = React.useState(false);\n\n  const onSubmit = (data: GroupMutationInput) => {\n    updateLoading(true);\n    data.id = props.group?.id;\n    saveGroup(data)\n      .then(() => {\n        updateLoading(false);\n        props.onCancel();\n      })\n      .catch(() => updateLoading(false));\n  };\n\n  return (\n    <Card elevation={0}>\n      <CardHeader>Add Group</CardHeader>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Row gutter={[0, '10px 0']}>\n          <Col>\n            <Controller\n              rules={{ required: 'Name is required' }}\n              control={control}\n              name=\"name\"\n              render={({ onChange, value, onBlur }) => (\n                <Input\n                  required\n                  label=\"Name\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.name}\n                  onBlur={onBlur}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"permissions\"\n              render={({ onChange, value }) => (\n                <PermissionDropDown\n                  value={value || []}\n                  onChange={(e) => onChange(e)}\n                  error={errors.permissions?.join(',')}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"features\"\n              render={({ value, onChange }) => (\n                <AutoComplete\n                  mode=\"multiple\"\n                  value={value || []}\n                  onChange={onChange}\n                  error={errors.features?.map((v) => v?.message).join(',')}\n                  listDisplayProp={(e) => e}\n                  uniqueIdentifier={(e) => e}\n                  displayValue={(e) => e}\n                  label=\"Select Features\"\n                  data={(e) => [e.toUpperCase()]}\n                />\n              )}\n            />\n          </Col>\n          <Col offset={15} span={4}>\n            <Button displayBlock type=\"danger\" onClick={props.onCancel}>\n              Cancel\n            </Button>\n          </Col>\n          <Col span={1} />\n          <Col span={4}>\n            <Button displayBlock type=\"primary\" loading={isLoading}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    </Card>\n  );\n};\n","import { client } from '../config';\nimport { CreateGroupMutation } from '../gql/group';\nimport { MutationRoot } from '../typings/schema';\nimport { GroupMutationInput } from '../typings/group';\n\nexport function createGroup(group: GroupMutationInput) {\n  return client.mutate<Pick<MutationRoot, 'addGroup'>>({\n    mutation: CreateGroupMutation,\n    variables: { group },\n  });\n}\n","import * as React from 'react';\nimport { useQuery, ApolloQueryResult } from '@apollo/client';\nimport { GroupListQuery } from '../../gql/group';\nimport { client } from '../../config';\nimport { QueryRoot } from '../../typings/schema';\nimport { Skeleton } from 'sha-el-design/lib';\n\nexport type FetchGroupDataProps = {\n  first?: number;\n  children: (params: {\n    data: Pick<QueryRoot, 'groupEdge'> | undefined;\n    pageNumber: number;\n    updatePageNumber: (pageNumber: number) => void;\n    search: string;\n    updateSearch: (search: string) => void;\n    refetch: () => Promise<ApolloQueryResult<Pick<QueryRoot, 'groupEdge'>>>;\n  }) => React.ReactNode;\n};\n\nexport const FetchGroupData: React.FC<FetchGroupDataProps> = (props) => {\n  const { first = 20 } = props;\n  const [pageNumber, updatePageNumber] = React.useState(1);\n  const [search, updateSearch] = React.useState('');\n\n  const { loading, error, data, refetch } = useQuery<Pick<QueryRoot, 'groupEdge'>>(GroupListQuery, {\n    variables: { first, offset: (pageNumber - 1) * 20, name: search },\n    client,\n  });\n\n  if (error) {\n    return <div>Something went wrong</div>;\n  }\n\n  return (\n    <Skeleton\n      isLoading={loading}\n      render={() => <div>{props.children({ data, pageNumber, updatePageNumber, search, updateSearch, refetch })}</div>}\n    />\n  );\n};\n","import React from 'react';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\nimport { ApolloQueryResult } from '@apollo/client';\nimport { RouteComponentProps } from '@reach/router';\nimport { Button, FlexTable, Pagination } from 'sha-el-design/lib';\nimport { TimeSince } from '../../helpers/Date';\nimport { GroupNode } from '../../typings/group';\nimport { QueryRoot } from '../../typings/schema';\n\ninterface Props extends RouteComponentProps {\n  data: Pick<QueryRoot, 'groupEdge'> | undefined;\n  pageNumber: number;\n  updatePageNumber: (pageNumber: number) => void;\n  search: string;\n  updateSearch: (search: string) => void;\n  refetch: () => Promise<ApolloQueryResult<Pick<QueryRoot, 'groupEdge'>>>;\n  onGroupSelect: (group: GroupNode | null) => void;\n}\n\nexport const GroupTable: React.FC<Props> = (props) => {\n  return (\n    <FlexTable\n      data={props.data?.groupEdge.edges || []}\n      pagination={\n        <Pagination\n          justify=\"flex-end\"\n          totalCount={props.data?.groupEdge.count || 0}\n          batchSize={8}\n          currentPage={props.pageNumber}\n          onChange={props.updatePageNumber}\n        />\n      }\n    >\n      <FlexTable.Column span={6} header=\"Name\" key=\"name\">\n        {(data?: GroupNode) => (\n          <Button flat primary link onClick={() => props.onGroupSelect(data || null)}>\n            {data?.name}\n          </Button>\n        )}\n      </FlexTable.Column>\n      <FlexTable.Column span={8} header=\"Created By\" key=\"createdBy\">\n        {(data?: GroupNode) => data?.createdBy?.email}\n      </FlexTable.Column>\n      <FlexTable.Column span={5} header=\"Last update\" key=\"lastupdate\">\n        {(data?: GroupNode) => data && <TimeSince>{new Date(data?.updatedAt)}</TimeSince>}\n      </FlexTable.Column>\n    </FlexTable>\n  );\n};\n","import { Link, RouteComponentProps } from '@reach/router';\nimport React, { useState } from 'react';\nimport { MdHome } from 'react-icons/md';\nimport { Breadcrumb, Button, Drawer, Page } from 'sha-el-design/lib';\nimport { GroupMutationInput } from '../../typings/group';\nimport { CreateGroup } from './CreateGroup';\nimport { FetchGroupData } from './FetchGroupData';\nimport { GroupTable } from './Table';\n\nexport const GroupList: React.FC<RouteComponentProps> = (props) => {\n  const [addOpen, updateAddOpen] = useState(false);\n  const [group, updateGroup] = useState<GroupMutationInput | null>(null);\n  return (\n    <Page\n      title={\n        <Breadcrumb>\n          <Link to=\"/\">\n            <MdHome />\n          </Link>\n          <Link to=\"#\">Group List</Link>\n        </Breadcrumb>\n      }\n      extra={\n        <Button primary onClick={() => updateAddOpen(true)}>\n          Add Group\n        </Button>\n      }\n    >\n      <FetchGroupData>\n        {(params) => (\n          <>\n            <GroupTable\n              {...params}\n              {...props}\n              onGroupSelect={(data) => {\n                updateGroup(data);\n                data && updateAddOpen(true);\n              }}\n            />\n            <Drawer style={{ container: { width: '500px' } }} isVisible={addOpen}>\n              <CreateGroup\n                group={group || undefined}\n                onCancel={() => {\n                  params.refetch();\n                  updateGroup(null);\n                  updateAddOpen(false);\n                }}\n              />\n            </Drawer>\n          </>\n        )}\n      </FetchGroupData>\n    </Page>\n  );\n};\n","import { RouteComponentProps, Router } from '@reach/router';\nimport React from 'react';\nimport { GroupList } from './GroupList';\n\nexport const Group: React.FC<RouteComponentProps> = () => {\n  return (\n    <Router>\n      <GroupList path=\"/\" />\n    </Router>\n  );\n};\n","import { gql } from 'apollo-boost';\n\nexport const OrganizationListQuery = gql`\n  query OrganizationListQuery($first: Int, $offset: Int, $name: String) {\n    organizationEdge(first: $first, offset: $offset, nameIContains: $name) {\n      count\n      edges {\n        id\n        name\n        address\n        contact\n        gstCode\n        gstRate\n        hsnCode\n        amtPerPointSale\n        amtReady\n        features\n        updatedAt\n        users\n      }\n    }\n  }\n`;\n\nexport const AddOrganizationMutation = gql`\n  mutation AddOrganizationMutation($organization: OrganizationMutationInput!) {\n    addOrganization(organization: $organization) {\n      id\n      name\n      address\n      contact\n      gstCode\n      gstRate\n      hsnCode\n      amtReady\n      amtPerPointSale\n      features\n      updatedAt\n      users\n    }\n  }\n`;\n","import * as React from 'react';\nimport { AutoComplete } from 'sha-el-design';\nimport { UserNode } from '../../typings/user';\nimport { client } from '../../config';\nimport { UserDropDownQuery } from '../../gql/user';\nimport { QueryRoot } from '../../typings/schema';\n\nexport type UserDropDownProps =\n  | {\n      mode: 'single';\n      value?: UserNode;\n      onChange?: (user: UserNode) => void;\n      children?: React.ReactElement;\n    }\n  | {\n      mode: 'multiple';\n      value?: UserNode[];\n      onChange?: (user: UserNode[]) => void;\n      children?: React.ReactElement;\n    };\n\nconst fetchUsers = async (email: string) => {\n  const resp = await client.query<Pick<QueryRoot, 'userEdge'>>({\n    query: UserDropDownQuery,\n    variables: { email },\n    errorPolicy: 'all',\n  });\n\n  return new Promise<UserNode[]>((resolve, reject) => {\n    if (resp.data) {\n      resolve(resp.data.userEdge.edges);\n    }\n    if (resp.errors) {\n      reject(resp.errors);\n    }\n  });\n};\n\nexport const UserDropdown: React.FC<UserDropDownProps> = (props) => {\n  return (\n    <AutoComplete<UserNode>\n      {...props}\n      data={fetchUsers}\n      uniqueIdentifier={(e) => e.id || ((e as unknown) as string)}\n      listDisplayProp={(e) => `${e.email}, ${e.id}`}\n      displayValue={(e) => e?.email || ((e as unknown) as string)}\n      clearable={false}\n      searchValue={(e) => e?.email}\n      label=\"Select User\"\n    />\n  );\n};\n","import React from 'react';\nimport { Row, Col, Input, Button, Card, CardHeader, notify, AutoComplete, Textarea } from 'sha-el-design';\nimport { useForm, Controller } from 'react-hook-form';\nimport { OrganizationMutationInput } from '../../typings/Organization';\nimport { createOrganization } from '../../service/organization';\nimport { UserDropdown } from '../User/UserDropDown';\nimport { UserNode } from '../../typings/user';\n\nexport type CreateOrganizationsProps = {\n  onCancel: () => void;\n  organization?: OrganizationMutationInput;\n};\n\nconst saveOrganization = (data: OrganizationMutationInput) =>\n  createOrganization(data)\n    .then(() => {\n      notify({\n        type: 'success',\n        title: 'Organization Added',\n      });\n    })\n    .catch(() =>\n      notify({\n        type: 'error',\n        title: 'Something went wrong',\n      }),\n    );\n\nexport const CreateOrganization: React.FC<CreateOrganizationsProps> = (props) => {\n  const { handleSubmit, errors, control } = useForm<OrganizationMutationInput>({\n    defaultValues: props.organization || {\n      name: '',\n      features: [],\n      users: [],\n    },\n  });\n  const [isLoading, updateLoading] = React.useState(false);\n\n  const onSubmit = (data: OrganizationMutationInput) => {\n    updateLoading(true);\n    data.id = props.organization?.id;\n    saveOrganization(data)\n      .then(() => {\n        updateLoading(false);\n        props.onCancel();\n      })\n      .catch(() => updateLoading(false));\n  };\n\n  return (\n    <Card elevation={0}>\n      <CardHeader>Add Organization</CardHeader>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Row gutter={[0, '10px 0']}>\n          <Col>\n            <Controller\n              rules={{ required: 'Name is required' }}\n              control={control}\n              name=\"name\"\n              render={({ onChange, value }) => (\n                <Input\n                  required\n                  label=\"Name\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.name?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"contact\"\n              render={({ onChange, value }) => (\n                <Input\n                  label=\"Contact\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.contact?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"gstCode\"\n              render={({ onChange, value }) => (\n                <Input\n                  label=\"GST Code\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.gstCode?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"gstRate\"\n              render={({ onChange, value }) => (\n                <Input\n                  label=\"GST Rate\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.gstRate?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"hsnCode\"\n              render={({ onChange, value }) => (\n                <Input\n                  label=\"HSN Code\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.hsnCode?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"amtPerPointSale\"\n              render={({ onChange, value }) => (\n                <Input\n                  label=\"Amount Per Point Sale\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.amtPerPointSale?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"amtReady\"\n              render={({ onChange, value }) => (\n                <Input\n                  label=\"Amount Ready\"\n                  onChange={(e) => onChange(e.target.value)}\n                  value={value}\n                  error={errors.amtReady?.message}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"address\"\n              render={({ onChange, value }) => (\n                <Textarea label=\"Address\" onChange={onChange} value={value} error={errors.address?.message} />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"features\"\n              render={({ value, onChange }) => (\n                <AutoComplete\n                  mode=\"multiple\"\n                  value={value || []}\n                  onChange={onChange}\n                  error={errors.features?.map((v) => v?.message).join(',')}\n                  listDisplayProp={(e) => e}\n                  uniqueIdentifier={(e) => e}\n                  displayValue={(e) => e}\n                  label=\"Select Features\"\n                  data={(e) => [e.toUpperCase()]}\n                />\n              )}\n            />\n          </Col>\n          <Col>\n            <Controller\n              control={control}\n              name=\"users\"\n              render={({ value, onChange }) => (\n                <UserDropdown\n                  mode=\"multiple\"\n                  value={value || []}\n                  onChange={(e: UserNode[]) => onChange(e.map((v) => v.id || v))}\n                />\n              )}\n            />\n          </Col>\n          <Col offset={15} span={4}>\n            <Button displayBlock type=\"danger\" onClick={props.onCancel}>\n              Cancel\n            </Button>\n          </Col>\n          <Col span={1} />\n          <Col span={4}>\n            <Button displayBlock type=\"primary\" loading={isLoading}>\n              Submit\n            </Button>\n          </Col>\n        </Row>\n      </form>\n    </Card>\n  );\n};\n","import { client } from '../config';\nimport { AddOrganizationMutation } from '../gql/organization';\nimport { OrganizationMutationInput } from '../typings/Organization';\nimport { MutationRoot } from '../typings/schema';\n\nexport function createOrganization(organization: OrganizationMutationInput) {\n  return client.mutate<Pick<MutationRoot, 'addOrganization'>>({\n    mutation: AddOrganizationMutation,\n    variables: { organization },\n    errorPolicy: 'all',\n  });\n}\n","import { useQuery } from '@apollo/client';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport React from 'react';\nimport { MdFilter, MdHome } from 'react-icons/md';\nimport {\n  Breadcrumb,\n  Button,\n  Col,\n  Drawer,\n  FlexTable,\n  Input,\n  Page,\n  Pagination,\n  Popover,\n  Row,\n  Text,\n} from 'sha-el-design/lib';\nimport { client } from '../../config';\nimport { OrganizationListQuery } from '../../gql/organization';\nimport { TimeSince } from '../../helpers/Date';\nimport { OrganizationNode } from '../../typings/Organization';\nimport { QueryRoot } from '../../typings/schema';\nimport { CreateOrganization } from './CreateOrganization';\n\nexport const OrganizationList: React.FC<RouteComponentProps> = () => {\n  const [pageNumber, updatePageNumber] = React.useState(1);\n  const [pageSize, updatePageSize] = React.useState(10);\n  const [addOpen, updateAddOpen] = React.useState(false);\n  const [organization, updateOrganization] = React.useState<OrganizationNode | null>(null);\n\n  const [search, updateSearch] = React.useState('');\n  const { loading, error, data, refetch } = useQuery<Pick<QueryRoot, 'organizationEdge'>>(OrganizationListQuery, {\n    variables: { pageSize, offset: (pageNumber - 1) * pageSize, name: search },\n    client: client,\n  });\n\n  if (error) {\n    return <div>Something went wrong</div>;\n  }\n\n  return (\n    <Page\n      title={\n        <Breadcrumb>\n          <Link to=\"/\">\n            <MdHome />\n          </Link>\n          <Link to=\"#\">Organization List</Link>\n        </Breadcrumb>\n      }\n      extra={\n        <Button primary onClick={() => updateAddOpen(true)}>\n          Add Organization\n        </Button>\n      }\n    >\n      <FlexTable\n        data={data?.organizationEdge.edges || []}\n        loading={loading}\n        pagination={\n          <Pagination\n            totalCount={data?.organizationEdge.count || 0}\n            currentPage={pageNumber}\n            batchSize={pageSize}\n            itemsPerPage={[10, 20, 30]}\n            onChange={(pn, ns) => {\n              updatePageNumber(pn);\n              updatePageSize(ns);\n            }}\n            justify=\"flex-end\"\n          />\n        }\n      >\n        <FlexTable.Column\n          key=\"name\"\n          span={4}\n          header={\n            <>\n              <Text>Name</Text>\n              <Popover\n                preserveOnClose\n                content={\n                  <Row justifyContent=\"flex-end\">\n                    <Col>\n                      <Input\n                        defaultValue={search}\n                        borderless\n                        placeholder=\"Press enter to search\"\n                        onKeyDown={(e) => e.key === 'Enter' && updateSearch((e.target as HTMLInputElement).value)}\n                      />\n                    </Col>\n                    <Col flex=\"0 1 auto\" alignSelf=\"flex-end\">\n                      <Button primary flat onClick={() => updateSearch('')}>\n                        Clear\n                      </Button>\n                    </Col>\n                  </Row>\n                }\n              >\n                <Button size=\"small\" icon={<MdFilter />} secondary={!!search} flat />\n              </Popover>\n            </>\n          }\n        >\n          {(data?: OrganizationNode) => (\n            <Button\n              link\n              flat\n              primary\n              onClick={() => {\n                data && updateOrganization(data);\n                updateAddOpen(true);\n              }}\n            >\n              {data?.name}\n            </Button>\n          )}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Contact\" span={6} key=\"contact\">\n          {(data?: OrganizationNode) => data?.contact}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Address\" span={10} key=\"address\">\n          {(data?: OrganizationNode) => data?.address}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Last update\" key=\"last update\" span={4}>\n          {(data?: OrganizationNode) => data && <TimeSince>{new Date(data?.updatedAt)}</TimeSince>}\n        </FlexTable.Column>\n      </FlexTable>\n      <Drawer style={{ container: { width: '500px' } }} isVisible={addOpen}>\n        <CreateOrganization\n          organization={organization || undefined}\n          onCancel={() => {\n            refetch();\n            updateOrganization(null);\n            updateAddOpen(false);\n          }}\n        />\n      </Drawer>\n    </Page>\n  );\n};\n","import { RouteComponentProps, Router } from '@reach/router';\nimport React from 'react';\nimport { OrganizationList } from './OrganizationList';\n\nexport const Organization: React.FC<RouteComponentProps> = () => {\n  return (\n    <Router>\n      <OrganizationList path=\"/\" />\n    </Router>\n  );\n};\n","import * as React from 'react';\nimport { Card, CardHeader, CardBody, Row, Col, Input, Button, notify } from 'sha-el-design';\nimport { UserMutationInput } from '../../typings/user';\nimport { addUser } from '../../service/user';\n\nexport type State = {\n  value: UserMutationInput;\n  error: {\n    [key in keyof UserMutationInput]?: string;\n  };\n  isError: boolean;\n};\n\nexport type UpdatePersonalDetailsProps = {\n  onCancel: () => void;\n  user: UserMutationInput;\n};\n\nexport class UpdatePersonalDetails extends React.Component<UpdatePersonalDetailsProps, State> {\n  constructor(props: UpdatePersonalDetailsProps) {\n    super(props);\n\n    this.state = {\n      value: props.user,\n      error: {},\n      isError: false,\n    };\n  }\n\n  onChange = (key: keyof UserMutationInput, value: UserMutationInput[keyof UserMutationInput]) => {\n    this.setState({ value: { ...this.state.value, [key]: value } });\n  };\n\n  onSubmit = () => {\n    addUser(this.state.value)\n      .then(() =>\n        notify({\n          title: 'User Details Updated',\n          type: 'success',\n        }),\n      )\n      .then(() => this.props.onCancel())\n      .catch(() =>\n        notify({\n          title: 'Something went wrong',\n          type: 'error',\n        }),\n      );\n  };\n\n  render() {\n    const { value, error, isError } = this.state;\n\n    return (\n      <Card elevation={0}>\n        <CardHeader subtitle=\"Update personal details\">User Personal Details Form</CardHeader>\n        <CardBody>\n          <Row gutter={[0, '10px']}>\n            <Col>\n              <Input\n                value={value.firstName}\n                label=\"First Name\"\n                error={error.firstName}\n                onChange={(e) => this.onChange('firstName', e.target.value)}\n              />\n            </Col>\n            <Col>\n              <Input\n                value={value.middleName}\n                label=\"Middle Name\"\n                error={error.middleName}\n                onChange={(e) => this.onChange('middleName', e.target.value)}\n              />\n            </Col>\n            <Col>\n              <Input\n                value={value.lastName}\n                label=\"Last Name\"\n                error={error.lastName}\n                onChange={(e) => this.onChange('lastName', e.target.value)}\n              />\n            </Col>\n            <Col offset={16} span={4}>\n              <Button displayBlock type=\"danger\" onClick={this.props.onCancel}>\n                Cancel\n              </Button>\n            </Col>\n            <Col span={4}>\n              <Button displayBlock type=\"primary\" onClick={this.onSubmit} disabled={isError}>\n                Submit\n              </Button>\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    );\n  }\n}\n","import * as React from 'react';\nimport { Row, Col, Input, Button, notify } from 'sha-el-design';\nimport { RiLockPasswordLine } from 'react-icons/ri';\nimport { updatePassword } from '../../service/user';\n\nexport type UpdatePasswordProps = {\n  onCancel: () => void;\n  userId: string;\n};\n\nexport const UpdatePassword: React.FC<UpdatePasswordProps> = (props) => {\n  const [state, setState] = React.useState({ password: '', confirmPassword: '', error: '' });\n\n  const onSubmit = () => {\n    updatePassword(props.userId, state.password)\n      .then(() =>\n        notify({\n          type: 'success',\n          title: 'Password Updated',\n        }),\n      )\n      .then(() => props.onCancel())\n      .catch(() =>\n        notify({\n          type: 'error',\n          title: 'Something went wrong',\n        }),\n      );\n  };\n\n  return (\n    <Row gutter={[0, '10px']}>\n      <Col>\n        <Input\n          type=\"password\"\n          label=\"Password\"\n          placeholder=\"Enter your Password\"\n          before={<RiLockPasswordLine />}\n          value={state.password}\n          onChange={({ target: { value } }) => setState({ ...state, password: value })}\n        />\n      </Col>\n      <Col>\n        <Input\n          type=\"password\"\n          label=\"Confirrm Password\"\n          placeholder=\"Re-enter Password\"\n          before={<RiLockPasswordLine />}\n          value={state.confirmPassword}\n          onChange={({ target: { value } }) => setState({ ...state, confirmPassword: value })}\n          error={state.error}\n        />\n      </Col>\n      <Col offset={16} span={4}>\n        <Button displayBlock type=\"danger\" onClick={props.onCancel}>\n          Cancel\n        </Button>\n      </Col>\n      <Col span={4}>\n        <Button displayBlock type=\"primary\" onClick={onSubmit} disabled={!!state.error}>\n          Submit\n        </Button>\n      </Col>\n    </Row>\n  );\n};\n","import * as React from 'react';\nimport { CardMedia } from 'sha-el-design';\nimport { shadow } from 'sha-el-design/lib/helpers/style';\nimport { ThemeConsumer } from 'sha-el-design/lib/components/Theme/Theme';\nimport { getColor } from 'sha-el-design/lib/helpers';\n\nexport type UserAvatarProps = {\n  image?: string;\n  style: React.CSSProperties;\n  email: string;\n};\n\nexport const UserAvatar: React.FC<UserAvatarProps> = (props) => {\n  if (!props.image) {\n    return (\n      <ThemeConsumer>\n        {(theme) => (\n          <div\n            style={{\n              ...(props.style || {}),\n              background: theme.secondary,\n              boxShadow: shadow('2X', theme),\n              display: 'flex',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <h1 style={{ textAlign: 'center', color: getColor(theme.secondary) }}>\n              {props.email.slice(0, 2).toUpperCase()}\n            </h1>\n          </div>\n        )}\n      </ThemeConsumer>\n    );\n  }\n\n  return <CardMedia image={props.image} height=\"200px\" style={props.style} />;\n};\n","import * as React from 'react';\nimport { Row, Col, Skeleton, Card, CardHeader, CardBody, Transfer, Button, notify, Drawer } from 'sha-el-design';\nimport { useQuery } from '@apollo/client';\nimport { UserDetailQuery } from '../../gql/user';\nimport { client } from '../../config';\nimport { QueryRoot } from '../../typings/schema';\nimport { FetchGroupData } from '../Group/FetchGroupData';\nimport {\n  addGroupsToUser,\n  addPermissionsToUser,\n  addApplicationToUser,\n  removeApplicationFromUser,\n} from '../../service/user';\nimport { UpdatePersonalDetails } from './UpdatePersonalDetails';\nimport { UpdatePassword } from './UpdatePassword';\nimport { UserDropdown } from './UserDropDown';\nimport { UserNode } from '../../typings/user';\nimport { UserAvatar } from './UserAvatar';\nimport { VouchPermissions } from '../Permission/Dropdown';\nimport { RouteComponentProps } from '@reach/router';\nimport { applicationListQuery } from '../../service/application';\nimport { ApplicationNode } from '../../typings/application';\n\nconst updateGroups = (userId: string, groups: string[], refetch: () => unknown) => {\n  addGroupsToUser(userId, groups)\n    .then(() =>\n      notify({\n        type: 'success',\n        title: 'Groups Updated',\n      }),\n    )\n    .then(refetch)\n    .catch(() =>\n      notify({\n        type: 'error',\n        title: 'Error updating groups',\n      }),\n    );\n};\n\nconst updatePermission = (userId: string, permissions: string[], refetch: () => unknown) => {\n  addPermissionsToUser(userId, permissions)\n    .then(() =>\n      notify({\n        type: 'success',\n        title: 'Permissions Updated',\n      }),\n    )\n    .then(refetch)\n    .catch(() =>\n      notify({\n        type: 'error',\n        title: 'Error updating permissions',\n      }),\n    );\n};\n\nconst addAppToUser = (userId: string, application: string, refetch: () => unknown) => {\n  addApplicationToUser(userId, application)\n    .then(() =>\n      notify({\n        type: 'success',\n        title: 'Access Granted',\n      }),\n    )\n    .then(refetch)\n    .catch(() =>\n      notify({\n        type: 'error',\n        title: 'Error updating permissions',\n      }),\n    );\n};\n\nconst removeAppFromUser = (userId: string, application: string, refetch: () => unknown) => {\n  removeApplicationFromUser(userId, application)\n    .then(() =>\n      notify({\n        type: 'success',\n        title: 'Access Removed',\n      }),\n    )\n    .then(refetch)\n    .catch(() =>\n      notify({\n        type: 'error',\n        title: 'Error updating permissions',\n      }),\n    );\n};\n\nconst handleAppChange = (\n  currentApplications: ApplicationNode[],\n  updatedApplications: ApplicationNode[],\n  userId: string,\n  refetch: () => unknown,\n) => {\n  const newApp = updatedApplications.find((v) => v.updatedAt);\n  if (newApp) {\n    return addAppToUser(userId, newApp.id, refetch);\n  }\n  const removedApp = currentApplications.find((v) => !updatedApplications.find((e) => e.id === v.id));\n  if (!removedApp) {\n    return;\n  }\n  return removeAppFromUser(userId, removedApp.id, refetch);\n};\n\nexport const MyAccount: React.FC<RouteComponentProps<{ id: string }>> = (props) => {\n  const userId = props.id;\n  const { loading, error, data, refetch } = useQuery<Pick<QueryRoot, 'user'>>(UserDetailQuery, {\n    variables: { id: userId },\n    client,\n  });\n\n  const [personalDetailsForm, togglePersonalDetailsForm] = React.useState(false);\n  const [updatePassword, toggleUpdatePassword] = React.useState(false);\n\n  if (error) {\n    return <div>something went wrong</div>;\n  }\n\n  return (\n    <Row style={{ height: '100vh' }} justifyContent=\"center\">\n      <Col style={{ paddingTop: '100px', width: '1000px' }} flex=\"0 1 1200px\">\n        <Skeleton\n          isLoading={loading}\n          render={() => (\n            <>\n              <Card\n                style={{\n                  borderRadius: '10px',\n                }}\n              >\n                <UserAvatar\n                  image={data?.user.image}\n                  email={data?.user.email || ''}\n                  style={{\n                    width: '200px',\n                    borderRadius: '50%',\n                    margin: 'auto',\n                    marginTop: '-100px',\n                    height: '200px',\n                  }}\n                />\n                <CardHeader\n                  style={{\n                    textAlign: 'center',\n                  }}\n                  subtitle={\n                    <>\n                      <div>{data?.user.email}</div>\n                      <div>\n                        <span>ID:</span>\n                        <span>{data?.user.id}</span>\n                      </div>\n                    </>\n                  }\n                >\n                  {data?.user.firstName} {data?.user.middleName} {data?.user.lastName}\n                </CardHeader>\n                <CardBody>\n                  <Row justifyContent=\"flex-end\">\n                    <Col flex=\"0 1 auto\">\n                      <Button flat type=\"secondary\" onClick={() => toggleUpdatePassword(true)}>\n                        Change Password\n                      </Button>\n                    </Col>\n                    <Col flex=\"0 1 auto\">\n                      <Button onClick={() => togglePersonalDetailsForm(true)} flat type=\"secondary\">\n                        Update Personal Details\n                      </Button>\n                    </Col>\n                  </Row>\n                </CardBody>\n              </Card>\n              <Card style={{ marginTop: '20px' }}>\n                <CardHeader subtitle=\"Applications\" />\n                <Transfer\n                  values={data?.user.applicationEdge?.edges}\n                  displayValue={(e) => e.name}\n                  uniqueIdentifier={(e) => e.id}\n                  listDisplayProp={(e) => e.name}\n                  data={() => applicationListQuery().then((v) => v.data.applicationEdge.edges)}\n                  onChange={(t) =>\n                    handleAppChange(\n                      data?.user.applicationEdge?.edges as ApplicationNode[],\n                      t,\n                      data?.user.id || '',\n                      refetch,\n                    )\n                  }\n                />\n              </Card>\n              <Card style={{ marginTop: '20px' }}>\n                <CardHeader subtitle=\"User groups\" />\n                <FetchGroupData first={10000}>\n                  {(groupData) => (\n                    <Transfer\n                      values={data?.user.groupsEdge?.edges}\n                      displayValue={(e) => e.name}\n                      uniqueIdentifier={(e) => e.id}\n                      listDisplayProp={(e) => e.name}\n                      data={() => groupData?.data?.groupEdge.edges || []}\n                      onChange={(e) =>\n                        data?.user &&\n                        updateGroups(\n                          data?.user.id,\n                          e.map((v) => v.id),\n                          refetch,\n                        )\n                      }\n                    />\n                  )}\n                </FetchGroupData>\n              </Card>\n              <Card style={{ marginTop: '20px' }}>\n                <CardHeader subtitle=\"User Permissions\" />\n                <Transfer\n                  values={data?.user.permissions || []}\n                  displayValue={(e) => e}\n                  uniqueIdentifier={(e) => e}\n                  listDisplayProp={(e) => e}\n                  data={() => Object.keys(VouchPermissions)}\n                  onChange={(e) => data?.user && updatePermission(data?.user.id, e, refetch)}\n                />\n              </Card>\n              <Drawer\n                style={{ container: { width: '500px' } }}\n                onClose={() => togglePersonalDetailsForm(false)}\n                isVisible={personalDetailsForm}\n              >\n                <UpdatePersonalDetails\n                  onCancel={() => {\n                    refetch();\n                    togglePersonalDetailsForm(false);\n                  }}\n                  user={{\n                    id: data?.user.id,\n                    email: data?.user.email || '',\n                    firstName: data?.user.firstName || '',\n                    middleName: data?.user.middleName || '',\n                    lastName: data?.user.lastName || '',\n                  }}\n                />\n              </Drawer>\n              <Drawer\n                style={{ container: { width: '500px' } }}\n                onClose={() => toggleUpdatePassword(false)}\n                isVisible={updatePassword}\n              >\n                <UpdatePassword\n                  onCancel={() => {\n                    refetch();\n                    toggleUpdatePassword(false);\n                  }}\n                  userId={data?.user.id || ''}\n                />\n              </Drawer>\n            </>\n          )}\n        />\n      </Col>\n    </Row>\n  );\n};\n","import { useQuery } from '@apollo/client';\nimport { Link, RouteComponentProps } from '@reach/router';\nimport React from 'react';\nimport { MdHome } from 'react-icons/md';\nimport { Breadcrumb, Button, FlexTable, Page, Pagination } from 'sha-el-design/lib';\nimport { client } from '../../config';\nimport { UserListQuery } from '../../gql/user';\nimport { TimeSince } from '../../helpers/Date';\nimport { QueryRoot } from '../../typings/schema';\nimport { UserNode } from '../../typings/user';\n\nexport const UserList: React.FC<RouteComponentProps> = () => {\n  const [pageNumber, updatePageNumber] = React.useState(1);\n  const [pageSize, updatePageSize] = React.useState(10);\n\n  const [search] = React.useState('');\n  const { loading, error, data } = useQuery<Pick<QueryRoot, 'userEdge'>>(UserListQuery, {\n    variables: { pageSize, offset: (pageNumber - 1) * pageSize, name: search },\n    client: client,\n  });\n\n  if (error) {\n    return <div>Something went wrong</div>;\n  }\n\n  return (\n    <Page\n      title={\n        <Breadcrumb>\n          <Link to=\"/\">\n            <MdHome />\n          </Link>\n          <Link to=\"#\">Users List</Link>\n        </Breadcrumb>\n      }\n      extra={\n        <Button primary component={<Link to=\"add\" />}>\n          Add Users\n        </Button>\n      }\n    >\n      <FlexTable\n        pagination={\n          <Pagination\n            totalCount={data?.userEdge.count || 0}\n            currentPage={pageNumber}\n            batchSize={pageSize}\n            itemsPerPage={[10, 20, 30]}\n            onChange={(pn, ns) => {\n              updatePageNumber(pn);\n              updatePageSize(ns);\n            }}\n            justify=\"flex-end\"\n          />\n        }\n        data={data?.userEdge.edges || []}\n        loading={loading}\n      >\n        <FlexTable.Column header=\"Name\" key=\"name\" span={6}>\n          {(col?: UserNode) => (\n            <Button primary link flat component={<Link to={col?.id || '#'} />}>\n              {col?.firstName} {col?.middleName} {col?.lastName}\n            </Button>\n          )}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Email\" key=\"email\" span={6}>\n          {(col?: UserNode) => col?.email}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Last Login\" key=\"last login\" span={3}>\n          {(col?: UserNode) => (col?.lastLogin ? <TimeSince>{new Date(col?.lastLogin)}</TimeSince> : '-')}\n        </FlexTable.Column>\n        <FlexTable.Column header=\"Defaul Organization\" key=\"do\" span={8}>\n          {(col?: UserNode) => col?.defaultOrganization?.name}\n        </FlexTable.Column>\n      </FlexTable>\n    </Page>\n  );\n};\n","import { RouteComponentProps, Router } from '@reach/router';\nimport React from 'react';\nimport { MyAccount } from './MyAcoount';\nimport { UserList } from './UserList';\n\nexport const User: React.FC<RouteComponentProps> = () => {\n  return (\n    <Router>\n      <UserList path=\"/\" />\n      <MyAccount path=\":id\" />\n    </Router>\n  );\n};\n","import { Link, RouteComponentProps, Router } from '@reach/router';\nimport React, { useEffect, useState } from 'react';\nimport { MdApps, MdDevicesOther, MdGroup, MdNaturePeople } from 'react-icons/md';\nimport { RiLogoutBoxFill } from 'react-icons/ri';\nimport { SiAuthy } from 'react-icons/si';\nimport { Button, Container, Content, SidePanel, Tooltip } from 'sha-el-design/lib';\nimport { logout, me } from '../../service/user';\nimport { QueryRoot } from '../../typings/schema';\nimport { Application } from '../Application';\nimport { Group } from '../Group';\nimport { Organization } from '../Organization';\nimport { User } from '../User';\n\nconst Home: React.FC<RouteComponentProps> = () => <div>Home</div>;\n\nexport const Dashboard: React.FC<RouteComponentProps> = () => {\n  const [user, updateUser] = useState<Pick<QueryRoot, 'me' | 'currentOrganization'> | null>(null);\n\n  useEffect(() => {\n    me().then((v) => updateUser(v));\n  }, []);\n\n  return (\n    <Container>\n      <SidePanel\n        bottom={\n          <Tooltip overlay=\"Logout\">\n            <Button flat displayBlock size=\"big\" onClick={logout} icon={<RiLogoutBoxFill />} />\n          </Tooltip>\n        }\n        logo={<SiAuthy size=\"50px\" style={{ background: 'var(--primary)' }} />}\n      >\n        <Tooltip overlay=\"Users\" placement=\"right\">\n          <Button\n            primary={location.href.includes('users')}\n            flat\n            displayBlock\n            size=\"big\"\n            icon={<MdNaturePeople />}\n            component={<Link to=\"users\" />}\n          />\n        </Tooltip>\n        <Tooltip overlay=\"Groups\" placement=\"right\">\n          <Button\n            primary={location.href.includes('groups')}\n            flat\n            displayBlock\n            size=\"big\"\n            icon={<MdGroup />}\n            component={<Link to=\"groups\" />}\n          />\n        </Tooltip>\n        <Tooltip overlay=\"Organization\" placement=\"right\">\n          <Button\n            primary={location.href.includes('organizations')}\n            flat\n            displayBlock\n            size=\"big\"\n            icon={<MdDevicesOther />}\n            component={<Link to=\"organizations\" />}\n          />\n        </Tooltip>\n        <Tooltip overlay=\"Application\" placement=\"right\">\n          <Button\n            primary={location.href.includes('applications')}\n            flat\n            displayBlock\n            size=\"big\"\n            icon={<MdApps />}\n            component={<Link to=\"applications\" />}\n          />\n        </Tooltip>\n      </SidePanel>\n      <Content>\n        <Router>\n          <Home path=\"/\" />\n          <User path=\"users/*\" />\n          <Group path=\"groups/*\" />\n          <Organization path=\"organizations/*\" />\n          <Application path=\"applications/*\" />\n        </Router>\n      </Content>\n    </Container>\n  );\n};\n","import React from 'react';\nimport { Router } from '@reach/router';\nimport { ThemeProvider } from 'sha-el-design/lib/components/Theme/Theme';\nimport { LoginSignup } from './components/Login';\nimport { Dashboard } from './components/Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <ThemeProvider theme=\"LIGHT\">\n      <Router>\n        <LoginSignup path=\"/\" />\n        <Dashboard path=\"/dashboard/*\" />\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}